<!DOCTYPE html> 
<html lang="en">
	<head> 
		<meta charset="utf-8" /> 
			<title><%= title %></title>  
			<link href='http://fonts.googleapis.com/css?family=Press+Start+2P' rel='stylesheet' type='text/css'>
			<link rel="stylesheet" href="styles/reset.css" />  
			<link rel="stylesheet" href="styles/style.css" />  
			<script src="/scripts/jquery.min.js"></script>
			<script src="/scripts/audiolet/src/audiolet/Audiolet.js"></script>
			<script src="/scripts/audiolet/src/audiofile/audiofile.js"></script>
			<script src="/scripts/voiceSeq.js"></script>
			<script src=""></script>
			<script src="/socket.io/socket.io.js"></script>
	</head>  
	<body id="index" class="home"> 
		<div id="header_wrap">
			<header class="wrapper">
			<h1><%= title %></h1>
			</header>
		</DIV>
			<div id="main_wrap">
				<div class="wrapper" id="main">
					<div id="machine">
			

					</div>
				</div>
				<div class="wrapper" id="footer">
					<a href="/">Go back home</a>
					<br>
					<a href="/" target="_blank">...or grab a drum to play</a>
				</div>
			</div>
		
			<script>
				//creates Voice objects for each drum in data.js
				<% drums.forEach(function(drum){ %>
					var <%=drum.slug%>Voice = new Voice("<%=drum.slug%>","<%=drum.name%>");
					<%=drum.slug%>Voice.drawChildren();
				<%})%>	
				
				
				//Machine, this is a heavily modified version of Audiolet's example code 
				var bufferSize = 65536;
				var sampleRate = 44100;
				var loopMod = 0;
				function machine() {
				  	var AudioletApp = function() {
				    	this.audiolet = new Audiolet(sampleRate, 2, undefined);//creates audiolet
				    	this.audiolet.scheduler.setTempo(60);
						<% drums.forEach(function(drum){ %>
								this.<%=drum.slug%> = new AudioletBuffer(1,1000);
								this.<%=drum.slug%>.load("<%=drum.sample%>",false);//load sample
								this.player<%=drum.slug%> = new BufferPlayer(this.audiolet, this.<%=drum.slug%>, 1, 0, 0);
								this.trigger<%=drum.slug%> = new TriggerControl(this.audiolet);
								this.gain<%=drum.slug%> = new Gain(this.audiolet, .60);//set default gain
								this.pan<%=drum.slug%> = new Pan(this.audiolet, 0.50);//set pan to center
								this.trigger<%=drum.slug%>.connect(this.player<%=drum.slug%>, 0, 1);
								this.player<%=drum.slug%>.connect(this.gain<%=drum.slug%>);
								this.gain<%=drum.slug%>.connect(this.pan<%=drum.slug%>);
								this.pan<%=drum.slug%>.connect(this.audiolet.output);
								var <%=drum.slug%>Durations = new PSequence([.125], Infinity);//had trouble with this, if duration array is longer than sample, sample won't fire
								this.<%=drum.slug%>Pattern = new PSequence ([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],Infinity);//default pattern
							<%})%>
							
							//for each frum create player based on Pattern array above
							//if 0 vol = mute
							//if 1 vol = volume from data/drums.js
							<% drums.forEach(function(drum){ %>
								this.audiolet.scheduler.play([this.<%=drum.slug%>Pattern], <%=drum.slug%>Durations,
								      function(<%=drum.slug%>Pattern, <%=drum.slug%>Durations) {
								        if (<%=drum.slug%>Pattern == 1)
								          this.gain<%=drum.slug%>.gain.setValue(<%=drum.vol%>);
								        else {
								          this.gain<%=drum.slug%>.gain.setValue(0.00);
										}
								        if ("<%=drum.slug%>" == "kick") setSpecialBg();
								        this.trigger<%=drum.slug%>.trigger.setValue(1);
										
								      }.bind(this)
								    );
							<%})%>
					}
					audioletApp = new AudioletApp();
				}
				
				window.onload = machine(); //fire machine
				
				//fuction colors background of currently selected sample set
				function setSpecialBg() {
					if (loopMod == 16) loopMod = 0;
					<% drums.forEach(function(drum){ %>
						<%=drum.slug%>Voice.booms[loopMod].style.backgroundColor = "#eee";
					    if (loopMod == 0)<%=drum.slug%>Voice.booms[15].style.backgroundColor = "#fff";
						//if (loopMod % 4 == 1) <%=drum.slug%>Voice.booms[15].style.backgroundColor = "#999";
					    else <%=drum.slug%>Voice.booms[loopMod-1].style.backgroundColor = "#fff";
						<%=drum.slug%>Voice.booms[0].style.backgroundColor = "#ddd";
						<%=drum.slug%>Voice.booms[4].style.backgroundColor = "#ddd";
						<%=drum.slug%>Voice.booms[8].style.backgroundColor = "#ddd";
						<%=drum.slug%>Voice.booms[12].style.backgroundColor = "#ddd";
					<%})%>
					loopMod++;
				}
				
				var socket = io.connect('localhost');
				
				//request drums on entrance, means you can have multiple drum machines open at once
				socket.on('entrance',function(){
					socket.emit('requestDrums',{});
	
				});
				
				//when voices updated we need to check to make sure we're up to date
				//traverse through goodStuff array to figrue out if drum is in it
				//if it is, show it, else, hide it and reset coloring back to all 0 array
				//also updates audiolet sequence to reflect data coming off the server
				socket.on('sendVoices',function(data){
					<% drums.forEach(function(drum){ %>
						var exists = false;
						for(var i = 0; i < data.goodStuff.length;i++) {
						
							if (<%=drum.slug%>Voice.slug == data.goodStuff[i].drumVoice) {
								<%=drum.slug%>Voice.socketSeq = data.goodStuff[i].drumSeq;
								<%=drum.slug%>Voice.socketSeqUpdate();
								<%=drum.slug%>Voice.showTitle();
								exists = true;
							  	audioletApp.<%=drum.slug%>Pattern.list = <%=drum.slug%>Voice.socketSeq;
							} 
							
						}
						if (exists == false) {
							<%=drum.slug%>Voice.socketSeq = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
							audioletApp.<%=drum.slug%>Pattern.list = <%=drum.slug%>Voice.socketSeq;
							//console.log(<%=drum.slug%>Voice.socketSeq);
							<%=drum.slug%>Voice.socketSeqUpdate();
							<%=drum.slug%>Voice.hideTitle();	
						}
					<%})%>	
					
				});
			</script>		
			

	</body> 
	
</html>